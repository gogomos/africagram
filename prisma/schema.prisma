generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aime {
  id             Int         @id @default(autoincrement())
  utilisateur_id Int
  post_id        Int
  date_creation  DateTime    @default(now())
  post           post        @relation(fields: [post_id], references: [id], map: "Aime_post_id_fkey")
  utilisateur    utilisateur @relation(fields: [utilisateur_id], references: [id], map: "Aime_utilisateur_id_fkey")

  @@index([post_id], map: "Aime_post_id_fkey")
  @@index([utilisateur_id], map: "Aime_utilisateur_id_fkey")
}

model commentaire {
  id             Int         @id @default(autoincrement())
  utilisateur_id Int
  post_id        Int
  message        String
  date_creation  DateTime    @default(now())
  post           post        @relation(fields: [post_id], references: [id], map: "Commentaire_post_id_fkey")
  utilisateur    utilisateur @relation(fields: [utilisateur_id], references: [id], map: "Commentaire_utilisateur_id_fkey")

  @@index([post_id], map: "Commentaire_post_id_fkey")
  @@index([utilisateur_id], map: "Commentaire_utilisateur_id_fkey")
}

model follower {
  id                                             Int         @id @default(autoincrement())
  following_id                                   Int
  follower_id                                    Int
  date_creation                                  DateTime    @default(now())
  utilisateur_follower_follower_idToutilisateur  utilisateur @relation("follower_follower_idToutilisateur", fields: [follower_id], references: [id], map: "Follower_follower_id_fkey")
  utilisateur_follower_following_idToutilisateur utilisateur @relation("follower_following_idToutilisateur", fields: [following_id], references: [id], map: "Follower_following_id_fkey")

  @@index([follower_id], map: "Follower_follower_id_fkey")
  @@index([following_id], map: "Follower_following_id_fkey")
}

model post {
  id                Int           @id @default(autoincrement())
  utilisateur_id    Int
  caption           String?
  image_url         String?
  date_creation     DateTime      @default(now())
  date_modification DateTime
  likesCount        Int           @default(0)
  aime              aime[]
  commentaire       commentaire[]
  utilisateur       utilisateur?   @relation(fields: [utilisateur_id], references: [id], map: "Post_utilisateur_id_fkey")

  @@index([utilisateur_id], map: "Post_utilisateur_id_fkey")
}

model profile {
  id                Int         @id @default(autoincrement())
  utilisateur_id    Int         @unique(map: "Profile_utilisateur_id_key")
  sexe              String
  pays              String
  ville             String
  date_creation     DateTime    @default(now())
  date_modification DateTime
  utilisateur       utilisateur @relation(fields: [utilisateur_id], references: [id], map: "Profile_utilisateur_id_fkey")
}

model utilisateur {
  id                                          Int           @id @default(autoincrement())
  firstname                                   String
  lastname                                    String
  email                                       String        @unique(map: "Utilisateur_email_key")
  password                                    String
  isAdmin                                     Boolean       @default(false)
  date_creation                               DateTime      @default(now())
  date_modification                           DateTime       @default(now())
  profileId                                   Int?
  aime                                        aime[]
  commentaire                                 commentaire[]
  follower_follower_follower_idToutilisateur  follower[]    @relation("follower_follower_idToutilisateur")
  follower_follower_following_idToutilisateur follower[]    @relation("follower_following_idToutilisateur")
  post                                        post[]
  profile                                     profile?
}
